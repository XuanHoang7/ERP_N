// <auto-generated />
using System;
using ERP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240917130823_updatev14")]
    partial class updatev14
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("PhanMem_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhongBan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TapDoan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CapDoNhanSu_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChucDanh_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChucVu_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChuyenNganh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DonViTraLuong_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmailThongBao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<bool>("HasUyQuyen")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnhUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaPhongBanHRM")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("NgayNghiViec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NghiViec")
                        .HasColumnType("bit");

                    b.Property<string>("NoiLamViec")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NoiOHienTai")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PhongBanThaco_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ThanhPhan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrinhDoChuyenMon")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Truong")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("vptq_kpi_DonViKPI_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChucDanh_Id");

                    b.HasIndex("ChucVu_Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhongBanThaco_Id");

                    b.HasIndex("vptq_kpi_DonViKPI_Id");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive_Role")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("ERP.Models.BoPhan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoPhan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaBoPhan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PhongBan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenBoPhan")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PhongBan_Id");

                    b.ToTable("BoPhans");
                });

            modelBuilder.Entity("ERP.Models.CapDoNhanSu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCapDoNhanSu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TenCapDoNhanSu")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("CapDoNhanSus");
                });

            modelBuilder.Entity("ERP.Models.CapDoPhongBanBoPhan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("TenCapDoPhongBanBoPhan")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("CapDoPhongBanBoPhans");
                });

            modelBuilder.Entity("ERP.Models.CauHinhDuyet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CapDuyet")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("NhanVienId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ThuTuDuyet")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("NhanVienId");

                    b.ToTable("CauHinhDuyets");
                });

            modelBuilder.Entity("ERP.Models.ChiTieuTyTrong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ChiTieu")
                        .HasColumnType("real");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DanhMucNhomPiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DanhMucTyTrongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ToanTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DanhMucNhomPiId");

                    b.HasIndex("DanhMucTyTrongId");

                    b.ToTable("ChiTieuTyTrong");
                });

            modelBuilder.Entity("ERP.Models.ChuKySo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HinhAnhChuKySo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("ChuKySos");
                });

            modelBuilder.Entity("ERP.Models.ChucDanh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DanhMucTyTrongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChucDanh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucTyTrongId");

                    b.ToTable("ChucDanhs");
                });

            modelBuilder.Entity("ERP.Models.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ChucVus");
                });

            modelBuilder.Entity("ERP.Models.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PageSize")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("ERP.Models.DM_LanhDaoDonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonViID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanhDaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DonViID");

                    b.HasIndex("LanhDaoId");

                    b.ToTable("DM_LanhDaoDonVis");
                });

            modelBuilder.Entity("ERP.Models.DM_NSKhongDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChuKyDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonViID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ThoiDiemDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DonViID");

                    b.ToTable("NSKhongDanhGias");
                });

            modelBuilder.Entity("ERP.Models.DanhMucNhomPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaDanhMucNhomPI")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDanhMucNhomPI")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("DanhMucNhomPIs");
                });

            modelBuilder.Entity("ERP.Models.DanhMucTrongYeu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DienGiai")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaDanhMucTrongYeu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDanhMucTrongYeu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("DanhMucTrongYeus");
                });

            modelBuilder.Entity("ERP.Models.DanhMucTyTrong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BatBuocDung")
                        .HasColumnType("bit");

                    b.Property<string>("ChuKyDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsKhong")
                        .HasColumnType("bit");

                    b.Property<string>("NhomChucDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("DanhMucTyTrongs");
                });

            modelBuilder.Entity("ERP.Models.DanhMucUyQuyen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanhDaoUpQuyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LanhDaoUpQuyenId");

                    b.ToTable("DanhMucUyQuyens");
                });

            modelBuilder.Entity("ERP.Models.DonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaDonVi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TapDoan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDonVi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TenVanTat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuTSEC")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("TapDoan_Id");

                    b.ToTable("DonVis");
                });

            modelBuilder.Entity("ERP.Models.DonViChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NguoiLienHe")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PhanMem_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SDT")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SDTNguoiLienHe")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DonVi_Id");

                    b.HasIndex("PhanMem_Id");

                    b.ToTable("DonViChiTiets");
                });

            modelBuilder.Entity("ERP.Models.DonViDo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaDonViDo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDonViDo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("DonViDos");
                });

            modelBuilder.Entity("ERP.Models.DonViHRM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDonViHRM")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("DonViHRMs");
                });

            modelBuilder.Entity("ERP.Models.DonViTinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaDonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDonViTinh")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("DonViTinhs");
                });

            modelBuilder.Entity("ERP.Models.DonViTraLuong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDonViTraLuong")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("DonViTraLuongs");
                });

            modelBuilder.Entity("ERP.Models.DuocUyQuyen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DanhMucUyQuyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanhDaoDuocUyQuyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DanhMucUyQuyenId");

                    b.HasIndex("LanhDaoDuocUyQuyenId");

                    b.ToTable("DuocUyQuyen");
                });

            modelBuilder.Entity("ERP.Models.EmailPhongCongNgheThongTin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailPhongCongNgheThongTins");
                });

            modelBuilder.Entity("ERP.Models.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AccessdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AccessdBy");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("ERP.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DonVi_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Parent_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhanMem_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhongBan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TapDoan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMenu")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("ERP.Models.Menu_Role", b =>
                {
                    b.Property<Guid>("Menu_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Role_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Add")
                        .HasColumnType("bit");

                    b.Property<bool>("Cof")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Del")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Edit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Print")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("View")
                        .HasColumnType("bit");

                    b.HasKey("Menu_Id", "Role_Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Role_Id");

                    b.ToTable("Menu_Roles");
                });

            modelBuilder.Entity("ERP.Models.PhanMem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDungChung")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuDungNgoai")
                        .HasColumnType("bit");

                    b.Property<string>("MaPhanMem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("NguoiQuanLy_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenPhanMem")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlPhamMemNgoai")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("PhanMems");
                });

            modelBuilder.Entity("ERP.Models.PhanMemDonViURL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsERP")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhanMem_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DonVi_Id");

                    b.HasIndex("PhanMem_Id");

                    b.ToTable("PhanMemDonViURLs");
                });

            modelBuilder.Entity("ERP.Models.PhienBan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuDung")
                        .HasColumnType("bit");

                    b.Property<string>("MaPhienBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("PhanMem_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DonVi_Id");

                    b.HasIndex("PhanMem_Id");

                    b.ToTable("phienBans");
                });

            modelBuilder.Entity("ERP.Models.PhongBanHRM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CapDoPhongBanBoPhanLevel1_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel2_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel3_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel4_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel5_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel6_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel7_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CapDoPhongBanBoPhanLevel8_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DonViHRM_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaPhongBanHRM")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TenPhongBan")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("DonViHRM_Id");

                    b.HasIndex("DonVi_Id");

                    b.ToTable("PhongBanHRMs");
                });

            modelBuilder.Entity("ERP.Models.PhongBanThaco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CapDo")
                        .HasColumnType("int");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("Parent_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenCap1")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap2")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap3")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap4")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap5")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap6")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap7")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenCap8")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TenPhongBan")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("ThuTuCap1")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap2")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap3")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap4")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap5")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap6")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap7")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuCap8")
                        .HasColumnType("int");

                    b.Property<Guid?>("vptq_kpi_DonViKPI_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DonVi_Id");

                    b.HasIndex("vptq_kpi_DonViKPI_Id");

                    b.ToTable("PhongBanThacos");
                });

            modelBuilder.Entity("ERP.Models.Phongban", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaPhongBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PhongBan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DonVi_Id");

                    b.ToTable("phongbans");
                });

            modelBuilder.Entity("ERP.Models.RoleByDonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("User_Id");

                    b.ToTable("RoleByDonVis");
                });

            modelBuilder.Entity("ERP.Models.Role_DV_PB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoPhan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Phongban_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleByDonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TapDoan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BoPhan_Id");

                    b.HasIndex("DonVi_Id");

                    b.HasIndex("Phongban_Id");

                    b.HasIndex("RoleByDonVi_Id");

                    b.HasIndex("TapDoan_Id");

                    b.ToTable("Role_DV_PBs");
                });

            modelBuilder.Entity("ERP.Models.TapDoan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaTapDoan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TapDoan_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTapDoan")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("TapDoans");
                });

            modelBuilder.Entity("ERP.Models.ThanhPhan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenThanhPhan")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("ThanhPhans");
                });

            modelBuilder.Entity("ERP.Models.ThongBaoHeThong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<Guid?>("DonVi_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDaXem")
                        .HasColumnType("bit");

                    b.Property<Guid>("PhanMem_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DonVi_Id");

                    b.HasIndex("PhanMem_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("ThongBaoHeThongs");
                });

            modelBuilder.Entity("ERP.Models.vptq_kpi_DonViKPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDanhGia")
                        .HasColumnType("bit");

                    b.Property<string>("MaDonViKPI")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDonViKPI")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("vptq_kpi_DonViKPIs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationUser", b =>
                {
                    b.HasOne("ERP.Models.ChucDanh", "ChucDanh")
                        .WithMany()
                        .HasForeignKey("ChucDanh_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.ChucVu", "ChucVu")
                        .WithMany()
                        .HasForeignKey("ChucVu_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.PhongBanThaco", "PhongBanThaco")
                        .WithMany()
                        .HasForeignKey("PhongBanThaco_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.vptq_kpi_DonViKPI", "vptq_kpi_DonViKPI")
                        .WithMany()
                        .HasForeignKey("vptq_kpi_DonViKPI_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChucDanh");

                    b.Navigation("ChucVu");

                    b.Navigation("PhongBanThaco");

                    b.Navigation("vptq_kpi_DonViKPI");
                });

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationUserRole", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERP.Models.BoPhan", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.Phongban", "Phongban")
                        .WithMany("BoPhans")
                        .HasForeignKey("PhongBan_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Phongban");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.CauHinhDuyet", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.ChiTieuTyTrong", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DanhMucNhomPI", "DanhMucNhomPI")
                        .WithMany()
                        .HasForeignKey("DanhMucNhomPiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DanhMucTyTrong", "DanhMucTyTrong")
                        .WithMany("ChiTieuTyTrongs")
                        .HasForeignKey("DanhMucTyTrongId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DanhMucNhomPI");

                    b.Navigation("DanhMucTyTrong");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.ChuKySo", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.ChucDanh", b =>
                {
                    b.HasOne("ERP.Models.DanhMucTyTrong", null)
                        .WithMany("ChucDanhs")
                        .HasForeignKey("DanhMucTyTrongId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ERP.Models.Config", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DM_LanhDaoDonVi", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.vptq_kpi_DonViKPI", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonViID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("LanhDaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("User");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DM_NSKhongDanhGia", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.vptq_kpi_DonViKPI", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonViID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("User");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DanhMucNhomPI", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DanhMucTrongYeu", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DanhMucTyTrong", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DanhMucUyQuyen", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("LanhDaoUpQuyenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DonVi", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.TapDoan", "TapDoan")
                        .WithMany()
                        .HasForeignKey("TapDoan_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("TapDoan");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DonViChiTiet", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.PhanMem", "PhanMem")
                        .WithMany()
                        .HasForeignKey("PhanMem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("PhanMem");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DonViDo", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DonViTinh", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.DuocUyQuyen", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DanhMucUyQuyen", "DanhMucUyQuyen")
                        .WithMany("DuocUyQuyens")
                        .HasForeignKey("DanhMucUyQuyenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("LanhDaoDuocUyQuyenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DanhMucUyQuyen");

                    b.Navigation("User");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.Log", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("AccessdBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ERP.Models.Menu", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.Menu_Role", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.Menu", "Menu")
                        .WithMany("Menu_Roles")
                        .HasForeignKey("Menu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationRole", "Role")
                        .WithMany("Menu_Roles")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.PhanMem", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.PhanMemDonViURL", b =>
                {
                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.PhanMem", "PhanMem")
                        .WithMany()
                        .HasForeignKey("PhanMem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("PhanMem");
                });

            modelBuilder.Entity("ERP.Models.PhienBan", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.PhanMem", "PhanMem")
                        .WithMany()
                        .HasForeignKey("PhanMem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("PhanMem");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.PhongBanHRM", b =>
                {
                    b.HasOne("ERP.Models.DonViHRM", "DonViHRM")
                        .WithMany()
                        .HasForeignKey("DonViHRM_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("DonViHRM");
                });

            modelBuilder.Entity("ERP.Models.PhongBanThaco", b =>
                {
                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.vptq_kpi_DonViKPI", "vptq_kpi_DonViKPI")
                        .WithMany()
                        .HasForeignKey("vptq_kpi_DonViKPI_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DonVi");

                    b.Navigation("vptq_kpi_DonViKPI");
                });

            modelBuilder.Entity("ERP.Models.Phongban", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.RoleByDonVi", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.Role_DV_PB", b =>
                {
                    b.HasOne("ERP.Models.BoPhan", "BoPhan")
                        .WithMany()
                        .HasForeignKey("BoPhan_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.Phongban", "Phongban")
                        .WithMany()
                        .HasForeignKey("Phongban_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.RoleByDonVi", "RoleByDonVi")
                        .WithMany("Role_DV_PBs")
                        .HasForeignKey("RoleByDonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Models.TapDoan", "TapDoan")
                        .WithMany()
                        .HasForeignKey("TapDoan_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BoPhan");

                    b.Navigation("DonVi");

                    b.Navigation("Phongban");

                    b.Navigation("RoleByDonVi");

                    b.Navigation("TapDoan");
                });

            modelBuilder.Entity("ERP.Models.TapDoan", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("ERP.Models.ThongBaoHeThong", b =>
                {
                    b.HasOne("ERP.Models.DonVi", "DonVi")
                        .WithMany()
                        .HasForeignKey("DonVi_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ERP.Models.PhanMem", "PhanMem")
                        .WithMany()
                        .HasForeignKey("PhanMem_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", "UserCreated")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("PhanMem");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("ERP.Data.MyDbContext+ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationRole", b =>
                {
                    b.Navigation("Menu_Roles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ERP.Data.MyDbContext+ApplicationUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ERP.Models.DanhMucTyTrong", b =>
                {
                    b.Navigation("ChiTieuTyTrongs");

                    b.Navigation("ChucDanhs");
                });

            modelBuilder.Entity("ERP.Models.DanhMucUyQuyen", b =>
                {
                    b.Navigation("DuocUyQuyens");
                });

            modelBuilder.Entity("ERP.Models.Menu", b =>
                {
                    b.Navigation("Menu_Roles");
                });

            modelBuilder.Entity("ERP.Models.Phongban", b =>
                {
                    b.Navigation("BoPhans");
                });

            modelBuilder.Entity("ERP.Models.RoleByDonVi", b =>
                {
                    b.Navigation("Role_DV_PBs");
                });
#pragma warning restore 612, 618
        }
    }
}
